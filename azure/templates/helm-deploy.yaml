jobs:
  - deployment: Deploy
    displayName: Trino Deployment
    environment: $(kubernetesEnvironment)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: HelmDeploy@0
              displayName: Helm deploy dev-config Trino
              condition: eq(variables.environment, 'dev')
              inputs:
                command: upgrade
                chartType: FilePath
                chartPath: "$(Build.SourcesDirectory)/infra/helm/trino"
                releaseName: trino
                namespace: $(kubernetesNamespace)
                force: true
                arguments: >
                  --set-string server.internalSharedSecret="$(sharedSecret)"
                  --set-file additionalCatalogs.delta_lake="$(Build.SourcesDirectory)/conf/catalog/delta_lake.properties"
                  --set-file auth.groups="$(Build.SourcesDirectory)/conf/group.txt"
                  --set ingress.enabled=true
                  --set ingress.hosts[0].host="$(ingressHost)"
                  --set ingress.hosts[0].paths[0].path=/
                  --set ingress.hosts[0].paths[0].pathType=Prefix
                  --set envFrom[0].secretRef.name="giga-trino-secrets-$(deployEnv)"
                  --set auth.passwordAuthSecret="giga-trino-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy staging-config Trino
              condition: eq(variables.environment, 'stg')
              inputs:
                command: upgrade
                chartType: FilePath
                chartPath: "$(Build.SourcesDirectory)/infra/helm/trino"
                releaseName: trino
                namespace: $(kubernetesNamespace)
                force: true
                arguments: >
                  --set-string server.internalSharedSecret="$(sharedSecret)"
                  --set-file additionalCatalogs.delta_lake="$(Build.SourcesDirectory)/conf/catalog/delta_lake.properties"
                  --set-file additionalCatalogs.pg_dev_oia_prjrazordb="$(Build.SourcesDirectory)/conf/catalog/pg_dev_oia_prjrazordb.properties"
                  --set-file auth.groups="$(Build.SourcesDirectory)/conf/group.txt"
                  --set ingress.enabled=true
                  --set ingress.hosts[0].host="$(ingressHost)"
                  --set ingress.hosts[0].paths[0].path=/
                  --set ingress.hosts[0].paths[0].pathType=Prefix
                  --set envFrom[0].secretRef.name="giga-trino-secrets-$(deployEnv)"
                  --set auth.passwordAuthSecret="giga-trino-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy production-config Trino
              condition: eq(variables.environment, 'prd')
              inputs:
                command: upgrade
                chartType: FilePath
                chartPath: "$(Build.SourcesDirectory)/infra/helm/trino"
                releaseName: trino
                namespace: $(kubernetesNamespace)
                force: true
                arguments: >
                  --set-string server.internalSharedSecret="$(sharedSecret)"
                  --set-file additionalCatalogs.delta_lake="$(Build.SourcesDirectory)/conf/catalog/delta_lake.properties"
                  --set-file auth.groups="$(Build.SourcesDirectory)/conf/group.txt"
                  --set ingress.enabled=true
                  --set ingress.hosts[0].host="$(ingressHost)"
                  --set ingress.hosts[0].paths[0].path=/
                  --set ingress.hosts[0].paths[0].pathType=Prefix
                  --set ingress.annotations."appgw\.ingress\.kubernetes\.io/appgw-ssl-certificate"=kv-cert-gigaglobal
                  --set envFrom[0].secretRef.name="giga-trino-secrets-$(deployEnv)"
                  --set auth.passwordAuthSecret="giga-trino-secrets-$(deployEnv)"

            - task: Kubernetes@1
              displayName: Force restart Trino
              inputs:
                namespace: $(kubernetesNamespace)
                command: rollout
                arguments: restart deployment
